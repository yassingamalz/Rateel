@use "sass:map";
@use 'variables' as vars;
@use 'mixins';

.courses-page {
    min-height: 100vh;
    overflow-x: hidden;
    position: relative;
    isolation: isolate;
    direction: rtl;
    background: #1F4037;  // Immediate solid fallback
    
    &::before {
        content: '';
        position: fixed;
        inset: 0;
        background: #1F4037;  // Solid color first
        background: linear-gradient(135deg, #1F4037 0%, #0B1C17 100%);
        z-index: -3;
        will-change: transform;
        -webkit-backface-visibility: hidden;
        backface-visibility: hidden;
    }
}

// Dynamic Flowing Background
.background-flow {
    position: fixed;
    inset: 0;
    z-index: -2;
    opacity: 0.6;
    overflow: hidden;
    pointer-events: none;

    .flow-path {
        position: absolute;
        width: 100%;
        height: 100%;
        will-change: transform;

        &--1 {
            transform: rotate(-10deg) scale(1.5);
            opacity: 0.4;
            animation: flowMove1 25s infinite alternate ease-in-out;

            path {
                fill: rgba(map.get(vars.$colors, 'primary', 'base'), 0.15);
            }
        }

        &--2 {
            transform: rotate(15deg) scale(1.2);
            opacity: 0.3;
            animation: flowMove2 20s infinite alternate-reverse ease-in-out;

            path {
                fill: #{rgba(map.get(vars.$colors, 'accent', 'base'), 0.1)};
            }
        }

        &--3 {
            transform: rotate(-5deg) scale(1.3);
            opacity: 0.2;
            animation: flowMove3 30s infinite alternate ease-in-out;

            path {
                fill: #{rgba(map.get(vars.$colors, 'primary', 'light'), 0.1)};
            }
        }
    }
}

.pattern-overlay {
    position: fixed;
    inset: 0;
    z-index: -1;
    opacity: 0.02;
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='80' height='80' viewBox='0 0 80 80'%3E%3Cpath fill='%23DAA520' d='M40 0L80 40L40 80L0 40L40 0zM40 10L70 40L40 70L10 40L40 10zM40 20L60 40L40 60L20 40L40 20z'/%3E%3C/svg%3E");
    background-size: 140px 140px;
    pointer-events: none;
}

.floating-icons {
    position: fixed;
    inset: 0;
    z-index: -1;
    pointer-events: none;   

    .icon {
        position: absolute;
        opacity: 0.1;
        color: #{map.get(vars.$colors, 'accent', 'base')};
        font-size: 5rem;
        will-change: transform;
        
        &--1 {
            top: 15%;
            right: 10%;
            animation: floatIcon 20s infinite ease-in-out;
        }

        &--2 {
            top: 45%;
            left: 15%;
            animation: floatIcon 25s infinite ease-in-out reverse;
        }

        &--3 {
            bottom: 20%;
            right: 25%;
            animation: floatIcon 22s infinite ease-in-out;
        }
    }
}

// Content Styles
.courses-layout {
    position: relative;
    display: flex;
    flex-direction: column;
    gap: map.get(vars.$spacing, 'xl');
    z-index: 1;
}

.path-info {
    max-width: 800px;
    margin: 0 auto;
    text-align: center;
    color: map.get(vars.$colors, 'text', 'light');
    position: relative;
    padding: map.get(vars.$spacing, 'xl') map.get(vars.$spacing, 'lg');

    &::before {
        content: '';
        position: absolute;
        top: 50%;
        left: 50%;
        width: 300px;
        height: 300px;
        background: radial-gradient(circle at center,
            #{rgba(map.get(vars.$colors, 'accent', 'base'), 0.1)} 0%,
            transparent 70%);
        transform: translate(-50%, -50%);
        filter: blur(40px);
        z-index: -1;
    }
}

.path-title {
    font-size: 2.5rem;
    font-weight: 600;
    margin-bottom: map.get(vars.$spacing, 'sm');
    color: map.get(vars.$colors, 'text', 'light');
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.path-subtitle {
    font-size: 1.25rem;
    color: map.get(vars.$colors, 'text', 'muted');
    margin-bottom: map.get(vars.$spacing, 'lg');
}

.path-options {
    display: flex;
    justify-content: center;
    gap: map.get(vars.$spacing, 'lg');
    margin-top: map.get(vars.$spacing, 'xl');
}

.path-option {
    display: flex;
    align-items: center;
    gap: map.get(vars.$spacing, 'sm');
    padding: map.get(vars.$spacing, 'md') map.get(vars.$spacing, 'lg');
    background: rgba(255, 255, 255, 0.05);
    border: 1px solid #{rgba(map.get(vars.$colors, 'accent', 'base'), 0.2)};
    border-radius: map.get(vars.$border-radius, 'full');
    font-size: 1rem;
    transition: transform 0.3s ease, background-color 0.3s ease, border-color 0.3s ease;
    backdrop-filter: blur(10px);
    will-change: transform;

    &:hover {
        transform: translateY(-2px);
        background: #{rgba(map.get(vars.$colors, 'accent', 'base'), 0.1)};
        border-color: #{rgba(map.get(vars.$colors, 'accent', 'base'), 0.4)};

        i {
            transform: scale(1.1);
        }
    }

    i {
        color: map.get(vars.$colors, 'accent', 'base');
        font-size: map.get(vars.$font-size, 'base');
        transition: transform 0.3s ease;
        margin-left: map.get(vars.$spacing, 'sm');
        will-change: transform;
    }
}

// Enhanced Courses Container
.courses-container {
    position: relative;
    overflow-x: auto;
    overflow-y: visible;
    padding: map.get(vars.$spacing, 'xl') 0;
    cursor: grab;
    scroll-behavior: smooth;
    overscroll-behavior-x: contain;
    -webkit-overflow-scrolling: touch;
    
    &.dragging {
        cursor: grabbing;
        user-select: none;
    }

    &::-webkit-scrollbar {
        display: none;
    }

    scrollbar-width: none;
}

.courses-wrapper {
    display: flex;
    gap: map.get(vars.$spacing, 'xxl');
    padding: map.get(vars.$spacing, 'xl') map.get(vars.$spacing, 'lg');
    margin: 0 auto;
    max-width: fit-content;
    padding-right: calc(50vw - 200px);
    padding-left: calc(50vw - 200px);
    will-change: transform;

    &::before {
        content: '';
        position: absolute;
        top: 50%;
        left: map.get(vars.$spacing, 'xl');
        right: map.get(vars.$spacing, 'xl');
        height: 4px;
        background: rgba(map.get(vars.$colors, 'accent', 'base'), 0.1);
        transform: translateY(-50%);
        z-index: 0;
    }
}

.course-item {
    flex: 0 0 400px;
    max-width: 400px;
    opacity: 0.7;
    transform: scale(0.9);
    transition: 
        transform 0.3s cubic-bezier(0.4, 0, 0.2, 1),
        opacity 0.3s cubic-bezier(0.4, 0, 0.2, 1),
        filter 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    filter: saturate(0.8);
    position: relative;
    z-index: 1;
    scroll-snap-align: center;
    will-change: transform, opacity;

    // Start circle (right in RTL) - only for non-first cards
    &:not(:first-child)::before {
        content: '';
        position: absolute;
        top: 50%;
        right: -8px;
        width: 16px;
        height: 16px;
        background: rgba(map.get(vars.$colors, 'accent', 'base'), 0.2);
        border-radius: 50%;
        transform: translateY(-50%);
        z-index: 2;
        transition: all 0.3s ease;
    }

    // End circle (left in RTL)
    &::after {
        content: '';
        position: absolute;
        top: 50%;
        left: -8px;
        width: 16px;
        height: 16px;
        background: rgba(map.get(vars.$colors, 'accent', 'base'), 0.2);
        border-radius: 50%;
        transform: translateY(-50%);
        z-index: 2;
        transition: all 0.3s ease;
    }

    // Connecting line
    .connector-line {
        position: absolute;
        top: 50%;
        right: -#{map.get(vars.$spacing, 'xl')};
        width: map.get(vars.$spacing, 'xl');
        height: 3px;
        background: rgba(map.get(vars.$colors, 'accent', 'base'), 0.1);
        transform: translateY(-50%);
        z-index: 1;
    }

    &:last-child {
        .connector-line {
            display: none;
        }
    }

    &--completed {
        &::before,
        &::after {
            background: map.get(vars.$colors, 'accent', 'base');
            box-shadow: 0 0 10px rgba(map.get(vars.$colors, 'accent', 'base'), 0.4);
        }

        .connector-line {
            background: map.get(vars.$colors, 'accent', 'base');
            box-shadow: 0 0 10px rgba(map.get(vars.$colors, 'accent', 'base'), 0.3);
        }
    }

    &--active {
        opacity: 1;
        transform: scale(1);
        filter: saturate(1);
        z-index: 2;

        &::before,
        &::after {
            background: map.get(vars.$colors, 'accent', 'light');
            transform: translateY(-50%) scale(1.2);
        }
    }

    &:hover:not(.dragging) {
        opacity: 1;
        transform: scale(1);
        filter: saturate(1);
    }
}

// Animation Keyframes
@keyframes flowMove1 {
    0% {
        transform: translate(0, 0) rotate(-10deg) scale(1.5);
    }
    100% {
        transform: translate(50px, 30px) rotate(-5deg) scale(1.6);
    }
}

@keyframes flowMove2 {
    0% {
        transform: translate(0, 0) rotate(15deg) scale(1.2);
    }
    100% {
        transform: translate(-30px, -20px) rotate(20deg) scale(1.3);
    }
}

@keyframes flowMove3 {
    0% {
        transform: translate(0, 0) rotate(-5deg) scale(1.3);
    }
    100% {
        transform: translate(20px, -40px) rotate(-8deg) scale(1.4);
    }
}

@keyframes floatIcon {
    0%, 100% {
        transform: translate(0, 0) rotate(0deg);
    }
    25% {
        transform: translate(15px, -15px) rotate(5deg);
    }
    50% {
        transform: translate(0, -30px) rotate(0deg);
    }
    75% {
        transform: translate(-15px, -15px) rotate(-5deg);
    }
}