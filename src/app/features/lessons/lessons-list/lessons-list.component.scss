@use "sass:map";
@use 'variables' as vars;
@use 'mixins' as mix;

.lessons-page {
  min-height: 100vh;
  background: linear-gradient(
    to bottom right,
    map.get(vars.$colors, 'primary', 'base'),
    map.get(vars.$colors, 'primary', 'dark')
  );
  overflow: hidden;
}

.islamic-decorations {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  pointer-events: none;
  z-index: 0;
  overflow: hidden;

  &::before {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background-image: url('/assets/images/islamic-pattern-2-dark.svg');
    background-repeat: repeat;
    background-size: 700px 700px; 
    rotate: 50deg;
    opacity: 0.04; 
    z-index: 1;
  }
}

.lessons-header {
  padding: 40px;
  background: linear-gradient(to bottom,
  rgba(map.get(vars.$colors, 'primary', 'dark'), 0.9),
  rgba(map.get(vars.$colors, 'primary', 'dark'), 0));
  margin-bottom: map.get(vars.$spacing, 'xl');
  position: relative;
  z-index: 2;
  .header-content {
    position: relative;
    z-index: 2;
    display: flex;
    align-items: center;
    gap: map.get(vars.$spacing, 'md');
  }
}

.back-button {
  @include mix.glass-effect;
  width: 40px;
  height: 40px;
  border-radius: 50%;
  border: none;
  color: map.get(vars.$colors, 'text', 'light');
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
}

.page-title {
  font-size: 1.5rem;
  font-weight: 600;
  color: map.get(vars.$colors, 'text', 'light');
}

.lessons-container {
  overflow-x: auto;
  overflow-y: hidden;
  padding: map.get(vars.$spacing, 'xl') map.get(vars.$spacing, 'lg');
  cursor: grab;
  
  &.dragging {
    cursor: grabbing;
    user-select: none;
  }

  -ms-overflow-style: none;  /* IE and Edge */
  scrollbar-width: none;     /* Firefox */
  
  &::-webkit-scrollbar {
    display: none;           /* Chrome, Safari and Opera */
  }
}

.lessons-wrapper {
  display: flex;
  align-items: center;
  min-width: max-content;
  padding: map.get(vars.$spacing, 'lg') 0;
}

.connector-line {
  width: 60px;
  height: 2px;
  background: rgba(map.get(vars.$colors, 'accent', 'base'), 0.3);
  margin: 0 map.get(vars.$spacing, 'sm');
}

@media only screen 
    and (orientation: landscape)
    and (max-device-width: 926px)
    and (hover: none) 
    and (pointer: coarse),
  only screen 
    and (orientation: landscape)
    and (max-device-height: 926px)
    and (hover: none)
    and (pointer: coarse) {
  
  // Your existing styles remain exactly the same
  .lessons-page {
    height: 100vh;
    display: flex;
    flex-direction: column;
  }

  .lessons-header {
    margin-bottom: 0;
    padding: 30px 30px 0;

    .header-content {
      gap: map.get(vars.$spacing, 'sm');
    }
    
    .page-title {
      font-size: 1.25rem;
    }
  }

  .back-button {
    width: 36px;
    height: 36px;
  }

  .lessons-container {
    flex: 1;
    padding: map.get(vars.$spacing, 'sm') map.get(vars.$spacing, 'md');
    display: flex;
    align-items: center;
    margin-top: -#{map.get(vars.$spacing, 'xxl')};
  }

  .lessons-wrapper {
    padding: 0;
    margin: 0 auto;
    width: max-content;
    align-items: center;
    justify-content: center;
  }

  .connector-line {
    width: 40px;
    margin: 0 map.get(vars.$spacing, 'xs');
  }
}

:host ::ng-deep .focus-highlight {
  animation: highlight-pulse 1.5s ease;
  z-index: 10;
  position: relative;
}

@keyframes highlight-pulse {
  0%, 100% {
    transform: scale(1);
    box-shadow: 0 0 0 rgba(map.get(vars.$colors, 'accent', 'base'), 0);
  }
  50% {
    transform: scale(1.05);
    box-shadow: 0 0 20px rgba(map.get(vars.$colors, 'accent', 'base'), 0.7);
  }
}

// Ensure smooth scrolling on container
.lessons-container {
  scroll-behavior: smooth;
  
  &:focus {
    outline: none;
  }
}