// lesson-details.component.scss
@use "sass:map";
@use 'variables' as vars;
@use 'mixins' as mix;

.lesson-details {
  width: 100vw;
  height: 100vh;
  position: relative;
  overflow: hidden;
  background: map.get(vars.$colors, 'primary', 'dark');

  // Progress Bar
  .progress-bar {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    background: rgba(0, 0, 0, 0.3);
    height: 4px; 
    z-index: 50;

    .progress-fill {
      height: 100%;
      background: map.get(vars.$colors, 'accent', 'base');
      transition: width 0.3s ease;
    }
  }

  // Progress Text
  .progress-text {
    position: fixed;
    top: 10px;
    left: 16px; // Left side for RTL layout
    color: rgba(255, 255, 255, 0.9);
    font-size: 14px;
    font-weight: 500;
    z-index: 51;
    padding: 2px 100px;
    border-radius: 15px;
    background: rgba(0, 0, 0, 0.3);
  }

  // Controls Area
  .controls-area {
    position: fixed;
    top: 10px;
    right: 30px; 
    z-index: 100;
    display: flex;
    align-items: center;
    gap: 12px;

    // Main Control Button
    .control-button {
      width: 64px;
      height: 64px;
      border-radius: 50%;
      border: none;
      background: rgba(255, 255, 255, 0.15);
      color: white;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
      transition: all 0.3s ease;
      z-index: 102;

      &:hover {
        background: rgba(255, 255, 255, 0.25);
        transform: scale(1.05);
      }

      i {
        font-size: 30px;
      }
    }

    // Menu Items
    .menu-items {
      display: flex;
      gap: 12px;
      opacity: 0;
      visibility: hidden;
      transform: translateX(20px); // Slide from right for RTL
      transition: all 0.3s ease;

      &.active {
        opacity: 1;
        visibility: visible;
        transform: translateX(0);
      }

      .menu-item {
        width: 64px;
        height: 64px;
        border-radius: 50%;
        border: none;
        background: rgba(255, 255, 255, 0.15);
        color: white;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        transition: all 0.3s ease;

        &:hover {
          background: rgba(255, 255, 255, 0.25);
          transform: scale(1.05);
        }

        i {
          font-size: 30px;

          &.fa-arrow-right {
            transform: scaleX(-1); // Flip arrow for RTL
          }
        }

        &.active {
          background: map.get(vars.$colors, 'accent', 'base');
        }
      }
    }
  }

  // Main Content Area
  .content-area {
    width: 100%;
    height: 100%;
    padding-top: 40px;

    .lesson-content {
      width: 100%;
      height: 100%;
      display: flex;
      align-items: center;
      justify-content: center;
      padding: map.get(vars.$spacing, 'lg');

      .video-container {
        width: 100%;
        max-width: 1200px;
        aspect-ratio: 16 / 9;
        border-radius: 8px;
        overflow: hidden;
        background: rgba(0, 0, 0, 0.2);
      }

      .reading-container {
        width: 100%;
        height: 100%;
        padding: map.get(vars.$spacing, 'lg');
        background: rgba(0, 0, 0, 0.2);
        border-radius: 8px;
      }
    }
  }
}