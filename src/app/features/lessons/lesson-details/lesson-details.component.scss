// lesson-details.component.scss
@use "sass:map";
@use 'variables' as vars;
@use 'mixins' as mix;

.lesson-details {
  width: 100%;
  height: 100%;
  position: relative;
  overflow: hidden;
  background: map.get(vars.$colors, 'primary', 'dark');
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  transition: filter 0.3s ease-out; // Add transition for filter changes

  // Vignette effect (subtle by default)
  &::before {
    content: '';
    position: absolute;
    inset: 0;
    background: radial-gradient(circle at center,
        transparent 30%,
        rgba(0, 0, 0, 0.3) 100%);
    pointer-events: none;
    opacity: 0.4;
    z-index: 1;
    transition: opacity 0.3s ease-out;
  }

  // Full-screen overlay for menu
  &::after {
    content: '';
    position: absolute;
    inset: 0;
    background: rgba(11, 28, 23, 0.5); // Adjust color to match your theme
    backdrop-filter: blur(5px);
    -webkit-backdrop-filter: blur(5px);
    opacity: 0;
    pointer-events: none;
    z-index: 50; // High enough to be above content but below controls
    transition: opacity 0.3s ease-out;
  }

  // Apply stronger vignette and blur when menu is open
  &.menu-open {
    &::before {
      opacity: 0.7;
    }

    &::after {
      opacity: 1;
    }
  }

  .progress-container {
    position: absolute;
    top: 20px;
    left: 20px;
    z-index: map.get(vars.$z-index, 'header');
    display: flex;
    flex-direction: column;
    gap: map.get(vars.$spacing, 'xs');
  }

  .progress-bar {
    width: 200px;
    height: 24px;
    position: relative;
    background: map.get(vars.$colors, 'background', 'overlay');
    border-radius: map.get(vars.$border-radius, 'full');
    overflow: hidden;

    .progress-fill {
      height: 100%;
      background: linear-gradient(to left,
          map.get(vars.$colors, 'accent', 'dark'),
          map.get(vars.$colors, 'accent', 'glow'));
      background-size: 200% 200%;
      animation: progress-glow 2s ease infinite;
      border-radius: map.get(vars.$border-radius, 'full');
    }
  }

  .progress-text {
    color: map.get(vars.$colors, 'text', 'light');
    font-size: map.get(vars.$font-size, 'sm');
    font-weight: 500;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-shadow: 0 0 8px rgba(map.get(vars.$colors, 'accent', 'glow'), 0.5);
    z-index: map.get(vars.$z-index, 'above');
  }

  @keyframes progress-glow {
    0% {
      background-position: 0% 50%;
    }

    50% {
      background-position: 100% 50%;
    }

    100% {
      background-position: 0% 50%;
    }
  }

  // Controls Area - keep above the overlay
  .controls-area {
    position: fixed;
    top: 20px;
    right: 30px;
    z-index: 100; // Ensure it's above the overlay
    display: flex;
    align-items: center;
    gap: 12px;
    transition: all 0.3s ease;

    // Main Control Button
    .control-button {
      width: 64px;
      height: 64px;
      border-radius: 50%;
      border: none;
      background: rgba(255, 255, 255, 0.15);
      color: white;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
      transition: all 0.3s ease;
      z-index: 102;
      box-shadow: 0 0 0 rgba(255, 255, 255, 0.3);

      &:hover {
        background: rgba(255, 255, 255, 0.25);
        transform: scale(1.05);
      }

      i {
        font-size: 30px;
      }

      // Pulsating effect when menu is open
      &.menu-active {
        background: map.get(vars.$colors, 'accent', 'base');
        box-shadow: 0 0 20px rgba(map.get(vars.$colors, 'accent', 'base'), 0.5);
        animation: pulse 2s infinite;
      }

      @keyframes pulse {
        0% {
          box-shadow: 0 0 0 0 rgba(map.get(vars.$colors, 'accent', 'base'), 0.7);
        }

        70% {
          box-shadow: 0 0 0 15px rgba(map.get(vars.$colors, 'accent', 'base'), 0);
        }

        100% {
          box-shadow: 0 0 0 0 rgba(map.get(vars.$colors, 'accent', 'base'), 0);
        }
      }
    }

    // Menu Items
    .menu-items {
      display: flex;
      gap: 12px;
      opacity: 0;
      visibility: hidden;
      transform: translateX(20px);
      transition: all 0.3s ease;

      &.active {
        opacity: 1;
        visibility: visible;
        transform: translateX(0);
      }

      .menu-item {
        width: 64px;
        height: 64px;
        border-radius: 50%;
        border: none;
        background: rgba(255, 255, 255, 0.15);
        color: white;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;

        // Ripple effect on hover
        &::after {
          content: '';
          position: absolute;
          inset: 0;
          background: radial-gradient(circle at center,
              rgba(255, 255, 255, 0.3),
              transparent 70%);
          opacity: 0;
          transition: opacity 0.3s ease;
        }

        &:hover {
          background: rgba(255, 255, 255, 0.25);
          transform: scale(1.05);

          &::after {
            opacity: 1;
          }
        }

        i {
          font-size: 30px;

          &.fa-arrow-right {
            transform: scaleX(-1); // Flip arrow for RTL
          }
        }

        &.active {
          background: map.get(vars.$colors, 'accent', 'base');
        }
      }
    }
  }

  // Main Content Area
  .content-area {
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    z-index: 2; // Above the vignette but below the menu overlay

    .lesson-content {
      width: 100%;
      height: 100%;
      transition: transform 0.3s ease, filter 0.3s ease;

      // Apply scale effect when menu is open
      .menu-open & {
        transform: scale(0.98);
        filter: brightness(0.8);
      }

      .video-container {
        width: 100%;
        aspect-ratio: 16 / 9;
        border-radius: 8px;
        overflow: hidden;
        background: rgba(0, 0, 0, 0.2);
      }

      .reading-container {
        width: 100%;
        height: 100%;
        padding: map.get(vars.$spacing, 'lg');
        background: rgba(0, 0, 0, 0.2);
        border-radius: 8px;
      }
    }
  }

  // Error message styling
  .error-message {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center;
    color: map.get(vars.$colors, 'text', 'light');
    z-index: 3;

    i {
      font-size: 5rem;
      color: map.get(vars.$colors, 'status', 'error');
      margin-bottom: 1rem;
      display: block;
    }

    .error-text {
      font-size: 1.5rem;
      font-weight: 600;
    }
  }

  // Responsive adjustments
  @media (max-width: 768px) {
    .progress-container {
      top: 10px;
      left: 10px;

      .progress-bar {
        width: 150px;
        height: 20px;
      }
    }

    .controls-area {
      top: 10px;
      right: 15px;

      .control-button,
      .menu-item {
        width: 48px;
        height: 48px;

        i {
          font-size: 24px;
        }
      }
    }
  }

  // Landscape mode optimizations
  @media (orientation: landscape) and (max-height: 600px) {
    .controls-area {
      top: 15px;
    }
  }
}