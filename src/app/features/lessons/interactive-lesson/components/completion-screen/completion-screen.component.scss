@use "sass:map";
@use 'variables' as vars;

:host {
  display: block;
  position: fixed;
  inset: 0;
  z-index: 30;
  pointer-events: none;
}

.completion-animation {
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  pointer-events: auto;
  
  .completion-particles {
    position: absolute;
    inset: 0;
    overflow: hidden;
    
    &::before, &::after {
      content: '';
      position: absolute;
      width: 10px;
      height: 10px;
      border-radius: 50%;
      animation: particle 2s ease-out infinite;
    }
    
    @for $i from 1 through 20 {
      &::before {
        left: random(100) * 1%;
        top: random(100) * 1%;
        animation-delay: random(10) * 0.1s;
      }
      
      &::after {
        left: random(100) * 1%;
        top: random(100) * 1%;
        animation-delay: random(10) * 0.1s;
      }
    }
  }
  
  .completion-message {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 20px;
    border-radius: 20px;
    animation: scaleIn 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    
    i {
      animation: pulse 2s infinite;
    }
    
    span {
      font-weight: 700;
      text-align: center;
    }
  }
}

// Dark theme (default)
:host-context(.theme-dark), :host {
  .completion-animation {
    background: rgba(0, 0, 0, 0.7);
    animation: fadeIn 0.5s ease-out;
    
    .completion-particles {
      &::before, &::after {
        background: map-get(vars.$colors, 'accent', 'base');
        box-shadow: 0 0 10px map-get(vars.$colors, 'accent', 'glow');
      }
    }
    
    .completion-message {
      background: rgba(map-get(vars.$colors, 'primary', 'light'), 0.9);
      padding: 30px;
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
      border: 1px solid rgba(map-get(vars.$colors, 'accent', 'base'), 0.3);
      
      i {
        font-size: 4rem;
        color: map-get(vars.$colors, 'accent', 'base');
      }
      
      span {
        font-size: 2rem;
        color: white;
      }
    }
  }
}

// Light theme (Mushaf style)
:host-context(.theme-light) {
  .completion-animation {
    background: rgba(map-get(vars.$mushaf-colors, 'shadow'), 0.7);
    animation: fadeIn 0.5s ease-out;
    
    .completion-particles {
      &::before, &::after {
        background: map-get(vars.$mushaf-colors, 'border');
        box-shadow: 0 0 10px map-get(vars.$mushaf-colors, 'border');
      }
    }
    
    .completion-message {
      background: map-get(vars.$mushaf-colors, 'paper');
      padding: 30px;
      box-shadow: 0 10px 30px rgba(map-get(vars.$mushaf-colors, 'shadow'), 0.4);
      border: 1px solid rgba(map-get(vars.$mushaf-colors, 'border'), 0.3);
      
      i {
        font-size: 3.5rem;
        color: map-get(vars.$mushaf-colors, 'border');
      }
      
      span {
        font-size: 1.8rem;
        color: map-get(vars.$mushaf-colors, 'text');
      }
    }
  }
}

// Media queries - Mobile 
@media (max-width: 768px) {
  :host-context(.theme-dark), :host {
    .completion-animation {
      .completion-message {
        padding: 25px;
        
        i {
          font-size: 3.5rem;
        }
        
        span {
          font-size: 1.8rem;
        }
      }
    }
  }
}

// Mobile landscape optimizations
@media (orientation: landscape) and (max-height: 600px) {
  .completion-animation {
    .completion-message {
      flex-direction: row;
      padding: 20px;
      gap: 15px;
    }
  }
  
  :host-context(.theme-dark), :host {
    .completion-animation {
      .completion-message {
        i {
          font-size: 3rem;
        }
        
        span {
          font-size: 1.6rem;
          text-align: left;
        }
      }
    }
  }
  
  :host-context(.theme-light) {
    .completion-animation {
      .completion-message {
        i {
          font-size: 2.5rem;
        }
        
        span {
          font-size: 1.4rem;
        }
      }
    }
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes scaleIn {
  from {
    transform: scale(0.8);
    opacity: 0;
  }
  to {
    transform: scale(1);
    opacity: 1;
  }
}

@keyframes pulse {
  0%, 100% {
    transform: scale(1);
    opacity: 1;
  }
  50% {
    transform: scale(1.1);
    opacity: 0.8;
  }
}

@keyframes particle {
  0% {
    transform: scale(0);
    opacity: 1;
  }
  100% {
    transform: scale(3);
    opacity: 0;
  }
}