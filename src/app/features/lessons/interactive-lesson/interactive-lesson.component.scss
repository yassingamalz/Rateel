// interactive-lesson.component.scss
// Combined from all three original files with proper theme support

@use "sass:map";
@use 'variables' as vars;

// Common styles for both themes
.interactive-lesson {
  position: relative;
  width: 100%;
  height: 100vh;
  overflow: hidden;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  direction: rtl;
  
  // Add 3D transforms for better performance
  transform: translateZ(0);
  will-change: transform;
  backface-visibility: hidden;

  // Theme toggle button
  .theme-toggle-wrapper {
    position: fixed;
    bottom: 20px;
    left: 25px;
    z-index: 100;
    
    .theme-toggle-btn {
      width: 40px;
      height: 40px;
      border-radius: 50%;
      border: none;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
      transition: all 0.3s ease;
      
      i {
        font-size: 1.2rem;
      }
    }
  }

  // Progress Bar
  .progress-container {
    position: fixed;
    top: 20px;
    left: 20px;
    right: 20px;
    z-index: 5;
    display: flex;
    align-items: center;

    .progress-bar {
      flex: 1;
      height: 8px;
      border-radius: 4px;
      overflow: hidden;
      position: relative;

      .progress-fill {
        height: 100%;
        border-radius: 4px;
        transition: width 0.3s ease-out;
        position: relative;
      }

      .progress-text {
        position: absolute;
        right: 10px;
        top: 50%;
        transform: translateY(-50%);
        font-size: 0.85rem;
        font-weight: 600;

        .percent {
          font-size: 0.7rem;
          opacity: 0.8;
        }
      }
    }
  }
}

// Dark theme styles
.theme-dark {
  &.interactive-lesson {
    background: linear-gradient(to bottom right,
        map-get(vars.$colors, 'primary', 'base'),
        map-get(vars.$colors, 'primary', 'dark'));

    // Theme toggle button styling
    .theme-toggle-btn {
      background: rgba(255, 255, 255, 0.15);
      color: white;
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);

      &:hover {
        background: rgba(255, 255, 255, 0.25);
        transform: scale(1.1);
      }
    }

    // Ambient background effects
    .ambient-background {
      position: absolute;
      inset: 0;
      overflow: hidden;
      pointer-events: none;
      z-index: 0;

      .ambient-glow {
        position: absolute;
        top: 30%;
        right: 30%;
        width: 60vh;
        height: 60vh;
        border-radius: 50%;
        background: radial-gradient(circle at center,
            rgba(map-get(vars.$colors, 'accent', 'glow'), 0.1) 0%,
            rgba(map-get(vars.$colors, 'accent', 'base'), 0.05) 30%,
            transparent 70%);
        filter: blur(40px);
        opacity: 0.6;
        transform: translateZ(0);
        will-change: transform;
        animation: float 10s ease-in-out infinite;
      }

      .pattern-overlay {
        position: absolute;
        inset: 0;
        opacity: 0.02;
        background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='80' height='80' viewBox='0 0 80 80'%3E%3Cpath fill='%23DAA520' d='M40 0L80 40L40 80L0 40L40 0zM40 10L70 40L40 70L10 40L40 10zM40 20L60 40L40 60L20 40L40 20z'/%3E%3C/svg%3E");
        background-size: 140px 140px;
      }
    }

    // Progress Bar
    .progress-container {
      .progress-bar {
        background: rgba(255, 255, 255, 0.1);
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);

        .progress-fill {
          background: linear-gradient(to right,
              map-get(vars.$colors, 'accent', 'base'),
              map-get(vars.$colors, 'accent', 'light'));

          &::after {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: linear-gradient(90deg,
                transparent,
                rgba(255, 255, 255, 0.3),
                transparent);
            animation: shimmer 2s infinite;
          }
        }

        .progress-text {
          color: white;
          text-shadow: 0 1px 3px rgba(0, 0, 0, 0.5);
        }
      }
    }
  }
}

// Light theme styles (Mushaf style)
.theme-light {
  &.interactive-lesson {
    background: linear-gradient(to bottom,
        map-get(vars.$mushaf-colors, 'paper'),
        darken(map-get(vars.$mushaf-colors, 'paper'), 5%));

    // Ornamental Border
    &::before {
      content: '';
      position: absolute;
      inset: 1rem;
      border: 2px solid map-get(vars.$mushaf-colors, 'border');
      border-radius: 8px;
      pointer-events: none;
      opacity: 0.3;
      z-index: 0;
    }

    // Theme toggle button styling
    .theme-toggle-btn {
      background: rgba(map-get(vars.$mushaf-colors, 'border'), 0.15);
      color: map-get(vars.$mushaf-colors, 'text');
      box-shadow: 0 2px 6px rgba(map-get(vars.$mushaf-colors, 'shadow'), 0.2);

      &:hover {
        background: rgba(map-get(vars.$mushaf-colors, 'border'), 0.25);
        transform: scale(1.1);
      }
    }

    // Pattern overlay for background texture
    .pattern-overlay {
      position: absolute;
      inset: 0;
      opacity: 0.05;
      background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='80' height='80' viewBox='0 0 80 80'%3E%3Cpath fill='%23C4A484' d='M40 0L80 40L40 80L0 40L40 0zM40 10L70 40L40 70L10 40L40 10zM40 20L60 40L40 60L20 40L40 20z'/%3E%3C/svg%3E");
      background-size: 140px 140px;
      z-index: 0;
      pointer-events: none;
    }

    // Enhanced Progress Bar with Mushaf style
    .progress-container {
      .progress-bar {
        height: 6px;
        background: rgba(map-get(vars.$mushaf-colors, 'border'), 0.1);
        border-radius: 3px;
        box-shadow: 0 1px 3px rgba(map-get(vars.$mushaf-colors, 'shadow'), 0.2);

        .progress-fill {
          background: map-get(vars.$mushaf-colors, 'border');
        }

        .progress-text {
          position: absolute;
          right: 10px;
          top: 10px;
          font-size: 0.85rem;
          font-weight: 500;
          color: map-get(vars.$mushaf-colors, 'text');

          .percent {
            font-size: 0.7rem;
            opacity: 0.8;
          }
        }
      }
    }
  }
}

// Media queries
@media (max-width: 768px) {
  .interactive-lesson {
    .theme-toggle-wrapper {
      bottom: 25px;
      left: 15px;
      
      .theme-toggle-btn {
        width: 36px;
        height: 36px;
      }
    }
  }
}

// Mobile landscape optimizations
@media (orientation: landscape) and (max-height: 600px) {
  .interactive-lesson {
    .theme-toggle-wrapper {
      bottom: 20px;
      left: 15px;
      
      .theme-toggle-btn {
        width: 32px;
        height: 32px;
        
        i {
          font-size: 1rem;
        }
      }
    }
  }

  .theme-dark, .theme-light {
    .progress-container {
      top: 10px;
    }
  }
}

// Animation keyframes
@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes shimmer {
  0% { transform: translateX(-100%); }
  100% { transform: translateX(100%); }
}

@keyframes float {
  0%, 100% { transform: translateY(0); }
  50% { transform: translateY(-20px); }
}