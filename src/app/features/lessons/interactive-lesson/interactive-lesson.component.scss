// interactive-lesson.component.scss
@use "sass:map";
@use 'variables' as vars;
@use 'mixins' as mix;

.practice-container {
  width: 100%;
  height: 100vh;
  overflow: hidden;
  position: relative;
  background-color: darken(map.get(vars.$colors, primary, dark), 15%);

  // Verses Container
  .verses-container {
    width: 100%;
    overflow: hidden;
    cursor: grab;

    &.dragging {
      cursor: grabbing;
      user-select: none;

      .verses-wrapper {
        pointer-events: none;
      }
    }
  }

  .verses-wrapper {
    display: inline-flex;
    align-items: center;
    transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    will-change: transform;
    padding: 0 40%;
    min-height: 400px;
    transform-origin: center;
  }

  // Verse Card
  .verse-card {
    flex: 0 0 auto;
    width: 500px;
    margin: 0 map.get(vars.$spacing, lg);
    transition: all 0.3s ease;
    transform-origin: center; 

    .verse-frame {
      padding: map.get(vars.$spacing, xl);
      border-radius: map.get(vars.$border-radius, lg);
      position: relative;
      border: 1px solid rgba(map.get(vars.$colors, accent, base), 0.1);
      transition: all 0.3s ease;

      // Mushaf-like paper texture
      background: linear-gradient(to right,
          rgba(map.get(vars.$colors, primary, dark), 0.95),
          rgba(map.get(vars.$colors, primary, dark), 0.98));
    }

    &.active {
      .verse-frame {
        border-color: rgba(map.get(vars.$colors, accent, base), 0.3);
        box-shadow: 0 0 30px rgba(map.get(vars.$colors, accent, base), 0.1);
      }

      .verse-text {
        color: rgba(map.get(vars.$colors, text, light), 0.9);
        text-shadow: 0 0 15px rgba(map.get(vars.$colors, accent, base), 0.3);
      }
    }

    &.completed {
      .verse-frame {
        border-color: rgba(map.get(vars.$colors, accent, base), 0.4);
      }

      .verse-text {
        color: map.get(vars.$colors, accent, light);
        text-shadow: 0 0 20px rgba(map.get(vars.$colors, accent, base), 0.4);
      }
    }
  }

  // Verse Text
  .verse-text {
    font-family: 'Cairo', sans-serif;
    font-size: 2.5rem;
    line-height: 2;
    color: rgba(map.get(vars.$colors, text, light), 0.5);
    text-align: center;
    direction: rtl;
    transition: all 0.3s ease;

    .highlight {
      display: inline-block;
      transition: all 0.3s ease;

      &:hover {
        color: map.get(vars.$colors, accent, light);
        text-shadow: 0 0 15px rgba(map.get(vars.$colors, accent, base), 0.5);
        transform: scale(1.05);
      }
    }
  }

  // Verse Number
  .verse-number {
    position: absolute;
    top: map.get(vars.$spacing, md);
    right: map.get(vars.$spacing, md);
    width: 36px;
    height: 36px;
    border-radius: 50%;
    background: rgba(map.get(vars.$colors, accent, base), 0.1);
    color: rgba(map.get(vars.$colors, text, light), 0.7);
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 0.875rem;
    border: 1px solid rgba(map.get(vars.$colors, accent, base), 0.2);
  }

  // Progress Dots
  .verse-progress {
    position: absolute;
    bottom: map.get(vars.$spacing, md);
    left: 50%;
    transform: translateX(-50%);

    .progress-dots {
      display: flex;
      gap: map.get(vars.$spacing, sm);

      .dot {
        width: 8px;
        height: 8px;
        border-radius: 50%;
        background: rgba(map.get(vars.$colors, text, light), 0.2);
        transition: all 0.3s ease;

        &.completed {
          background: map.get(vars.$colors, accent, base);
          box-shadow: 0 0 10px rgba(map.get(vars.$colors, accent, base), 0.4);
        }
      }
    }
  }

  // Connector Line
  .connector-line {
    width: 60px;
    height: 1px;
    background: rgba(map.get(vars.$colors, accent, base), 0.1);
    margin: 0 map.get(vars.$spacing, sm);
    align-self: center;
    transition: all 0.3s ease;

    &.completed {
      background: rgba(map.get(vars.$colors, accent, base), 0.4);
      box-shadow: 0 0 10px rgba(map.get(vars.$colors, accent, base), 0.2);
    }
  }

  // Recording Button
  .recording-controls {
    position: fixed;
    bottom: map.get(vars.$spacing, xl);
    left: 50%;
    transform: translateX(-50%);
    z-index: 10;
  }

  .record-button {
    width: 72px;
    height: 72px;
    border-radius: 50%;
    border: none;
    background: rgba(map.get(vars.$colors, accent, base), 0.9);
    color: map.get(vars.$colors, text, dark);
    cursor: pointer;
    transition: all 0.3s ease;
    position: relative;

    i {
      font-size: 1.5rem;
      transition: transform 0.2s ease;
    }

    &:hover:not(.recording):not(:disabled) {
      transform: scale(1.1);
      background: map.get(vars.$colors, accent, base);
      box-shadow: 0 0 20px rgba(map.get(vars.$colors, accent, base), 0.4);
    }

    &.recording {
      background: map.get(vars.$colors, status, error);

      .record-ripple {
        position: absolute;
        inset: -4px;
        border: 2px solid map.get(vars.$colors, status, error);
        border-radius: 50%;
        animation: ripple 1.5s infinite cubic-bezier(0.4, 0, 0.2, 1);
      }

      &::after {
        content: '';
        position: absolute;
        inset: -8px;
        border: 2px solid map.get(vars.$colors, status, error);
        border-radius: 50%;
        opacity: 0.5;
        animation: ripple 1.5s infinite cubic-bezier(0.4, 0, 0.2, 1) 0.5s;
      }
    }

    &:disabled {
      opacity: 0.5;
      cursor: not-allowed;
    }
  }

  // Feedback Dialog
  .feedback-dialog {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: 100;

    .feedback-content {
      padding: map.get(vars.$spacing, lg) map.get(vars.$spacing, xl);
      border-radius: map.get(vars.$border-radius, lg);
      display: flex;
      align-items: center;
      gap: map.get(vars.$spacing, md);
      background: rgba(map.get(vars.$colors, primary, dark), 0.9);
      backdrop-filter: blur(10px);
      border: 1px solid rgba(map.get(vars.$colors, accent, base), 0.2);

      &.success {
        border-color: rgba(map.get(vars.$colors, accent, base), 0.4);

        i {
          color: map.get(vars.$colors, accent, base);
        }
      }

      i {
        font-size: 1.5rem;
        color: map.get(vars.$colors, status, error);
      }

      span {
        color: map.get(vars.$colors, text, light);
        font-size: 1.25rem;
        font-weight: 500;
      }
    }
  }
}

// Animations
@keyframes ripple {
  0% {
    transform: scale(1);
    opacity: 1;
  }

  100% {
    transform: scale(1.5);
    opacity: 0;
  }
}

// Responsive Design
@media (max-width: 768px) {
  .practice-container {
    .verse-card {
      width: 90vw;

      .verse-text {
        font-size: 2rem;
      }
    }

    .connector-line {
      width: 40px;
    }
  }
}