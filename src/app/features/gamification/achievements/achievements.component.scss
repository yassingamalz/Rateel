// src/app/features/gamification/achievements/achievements.component.scss
@use "sass:map";
@use 'variables' as vars;
@use 'mixins' as mix;

// Main Container
.achievements-container {
    width: 100%;
    height: 100vh;
    overflow: hidden;
    display: flex;
    flex-direction: column;
    background: linear-gradient(to bottom right,
            map-get(vars.$colors, 'primary', 'dark'),
            darken(map-get(vars.$colors, 'primary', 'dark'), 10%));
    position: relative;
    padding: 0;

    // Add subtle Islamic pattern as background
    &::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-image: url('/assets/images/islamic-pattern-1-dark.svg');
        background-repeat: repeat;
        background-size: 700px 700px;
        opacity: 0.04;
        z-index: 0;
        pointer-events: none;
    }
}

// Particle Animation Background for Game Feel
.particles-container {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    overflow: hidden;
    z-index: 0;

    .particle {
        position: absolute;
        width: 6px;
        height: 6px;
        background: radial-gradient(circle, rgba(map-get(vars.$colors, 'accent', 'base'), 0.8) 0%, rgba(map-get(vars.$colors, 'accent', 'base'), 0) 70%);
        border-radius: 50%;
        opacity: 0;
        animation: float 8s infinite ease-in-out;

        @for $i from 1 through 10 {
            &:nth-child(#{$i}) {
                $size: random(8) + 2 + px;
                width: $size;
                height: $size;
                left: random(100) + 0%;
                top: random(100) + 0%;
                animation-delay: random(5000) + 0ms;
                animation-duration: (random(8) + 5) + s;
            }
        }
    }
}

@keyframes float {

    0%,
    100% {
        transform: translateY(0) translateX(0);
        opacity: 0;
    }

    20% {
        opacity: 0.4;
    }

    50% {
        transform: translateY(-20px) translateX(10px);
        opacity: 0.7;
    }

    80% {
        opacity: 0.4;
    }
}

// Tab Navigation
.tabs-container {
    padding: 0 15px;
    position: relative;
    z-index: 1;
    margin-bottom: 15px;

    .tab-buttons {
        display: flex;
        background: rgba(0, 0, 0, 0.3);
        border-radius: 15px;
        padding: 5px;
        overflow-x: auto;
        scrollbar-width: none;

        &::-webkit-scrollbar {
            display: none;
        }

        .tab-button {
            flex: 1;
            background: transparent;
            border: none;
            color: map-get(vars.$colors, 'text', 'muted');
            padding: 12px 15px;
            border-radius: 10px;
            font-size: 0.9rem;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 8px;
            transition: all 0.3s cubic-bezier(0.22, 1, 0.36, 1);
            min-width: 100px;

            i {
                font-size: 1.1rem;
            }

            &:hover {
                color: map-get(vars.$colors, 'text', 'light');
                background: rgba(255, 255, 255, 0.05);
            }

            &.active {
                color: map-get(vars.$colors, 'primary', 'dark');
                background: linear-gradient(135deg,
                        map-get(vars.$colors, 'accent', 'base'),
                        map-get(vars.$colors, 'accent', 'bright'));
                font-weight: 600;
                box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
                transform: translateY(-2px);

                i {
                    color: map-get(vars.$colors, 'primary', 'dark');
                }
            }
        }
    }
}

// Content Area
.content-area {
    flex: 1;
    padding: 0 15px 15px;
    position: relative;
    z-index: 1;
    overflow: hidden;
}

// Collection View (Kept in main component)
.collection-view {
    height: 100%;
    overflow: hidden;

    .collection-grid {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
        justify-content: center;
        max-height: 100%;
        overflow-y: auto;
        padding: 10px 0;
        -ms-overflow-style: none;
        scrollbar-width: none;

        &::-webkit-scrollbar {
            display: none;
        }

        .collection-item {
            width: 150px;
            background: rgba(255, 255, 255, 0.05);
            border-radius: 15px;
            padding: 15px;
            display: flex;
            flex-direction: column;
            align-items: center;
            cursor: pointer;
            transition: all 0.3s ease;
            position: relative;

            &:hover {
                transform: translateY(-5px);
                background: rgba(255, 255, 255, 0.1);
            }

            .badge-display {
                width: 100px;
                height: 100px;
                position: relative;
                margin-bottom: 10px;

                img {
                    width: 100%;
                    height: 100%;
                    object-fit: contain;
                    filter: grayscale(80%) brightness(50%);
                    transition: all 0.3s ease;
                }

                .lock-overlay {
                    position: absolute;
                    top: 0;
                    left: 0;
                    right: 0;
                    bottom: 0;
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    background: rgba(0, 0, 0, 0.5);
                    border-radius: 50%;

                    i {
                        font-size: 28px;
                        color: rgba(255, 255, 255, 0.7);
                    }
                }

                .rarity-indicator {
                    position: absolute;
                    top: -5px;
                    right: -5px;
                    width: 25px;
                    height: 25px;
                    border-radius: 50%;
                    border: 2px solid rgba(255, 255, 255, 0.3);

                    &.common {
                        background: #95a5a6;
                    }

                    &.uncommon {
                        background: #2ecc71;
                    }

                    &.rare {
                        background: #3498db;
                    }

                    &.epic {
                        background: #9b59b6;
                    }

                    &.legendary {
                        background: map-get(vars.$colors, 'accent', 'base');
                        box-shadow: 0 0 10px rgba(map-get(vars.$colors, 'accent', 'base'), 0.7);
                    }
                }
            }

            .badge-title {
                font-size: 1rem;
                font-weight: 600;
                color: map-get(vars.$colors, 'text', 'muted');
                text-align: center;
                margin: 0 0 5px;
                height: 40px;
                display: flex;
                align-items: center;
                justify-content: center;
            }

            .badge-rarity {
                font-size: 0.8rem;
                color: map-get(vars.$colors, 'text', 'muted');
            }

            &.unlocked {
                background: rgba(map-get(vars.$colors, 'primary', 'base'), 0.2);
                box-shadow: 0 5px 20px rgba(0, 0, 0, 0.3);

                .badge-display img {
                    filter: grayscale(0%) brightness(100%);
                    transform: scale(1.05);
                }

                .badge-title {
                    color: map-get(vars.$colors, 'text', 'light');
                }

                .badge-rarity {
                    color: map-get(vars.$colors, 'accent', 'base');
                }
            }
        }
    }
}

// Shared carousel styles
.carousel-indicators {
    display: flex;
    justify-content: center;
    gap: 8px;
    margin-top: 15px;

    .indicator {
        width: 10px;
        height: 10px;
        border-radius: 50%;
        background: rgba(255, 255, 255, 0.2);
        cursor: pointer;
        transition: all 0.3s ease;

        &.active {
            background: map-get(vars.$colors, 'accent', 'base');
            transform: scale(1.2);
            box-shadow: 0 0 8px rgba(map-get(vars.$colors, 'accent', 'base'), 0.7);
        }

        &:hover {
            background: rgba(map-get(vars.$colors, 'accent', 'base'), 0.5);
        }
    }
}