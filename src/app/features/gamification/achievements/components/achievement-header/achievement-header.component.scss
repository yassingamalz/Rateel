@use "sass:map";
@use 'variables' as vars;

.achievements-header {
    padding: 15px;
    position: relative;
    z-index: 1;

    .header-content {
        display: flex;
        justify-content: space-between;
        align-items: center;

        @media (max-width: 768px) {
            align-items: center;
        }
    }

    .title-section {
        .page-title {
            font-size: 2rem;
            font-weight: 700;
            color: map-get(vars.$colors, 'text', 'light');
            margin: 0 0 10px;
            text-shadow: 0 2px 10px rgba(0, 0, 0, 0.5);
            position: relative;
            display: inline-block;

            &::after {
                content: '';
                position: absolute;
                bottom: -5px;
                right: 0;
                width: 60%;
                height: 3px;
                background: map-get(vars.$colors, 'accent', 'base');
                border-radius: 2px;
                box-shadow: 0 0 10px rgba(map-get(vars.$colors, 'accent', 'base'), 0.7);
            }
        }

        .header-progress-bar {
            position: relative;
            width: 220px;
            height: 8px;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 4px;
            overflow: hidden;
            margin-top: 12px;

            .progress-fill {
                height: 100%;
                background: linear-gradient(to right, map-get(vars.$colors, 'accent', 'base'), map-get(vars.$colors, 'accent', 'bright'));
                border-radius: 4px;
                position: relative;
                transition: width 0.5s cubic-bezier(0.22, 1, 0.36, 1);

                &::after {
                    content: '';
                    position: absolute;
                    top: 0;
                    left: 0;
                    right: 0;
                    bottom: 0;
                    background: linear-gradient(90deg,
                            rgba(255, 255, 255, 0) 0%,
                            rgba(255, 255, 255, 0.3) 50%,
                            rgba(255, 255, 255, 0) 100%);
                    animation: shimmer 2s infinite;
                }
            }

            .progress-label {
                position: absolute;
                top: -18px;
                left: 0;
                color: map-get(vars.$colors, 'text', 'muted');
                font-size: 12px;
            }

            .progress-stars {
                position: absolute;
                top: -18px;
                right: 0;
                display: flex;
                direction: ltr;

                i {
                    font-size: 14px;
                    color: rgba(255, 255, 255, 0.2);
                    margin-left: 3px;

                    &.filled {
                        color: map-get(vars.$colors, 'accent', 'base');
                        filter: drop-shadow(0 0 3px rgba(map-get(vars.$colors, 'accent', 'base'), 0.5));
                    }
                }
            }
        }
    }

    .stats-section {
        .total-score {
            display: flex;
            flex-direction: column;
            align-items: center;

            .score-circle {
                width: 80px;
                height: 80px;
                border-radius: 50%;
                background: radial-gradient(circle,
                        rgba(map-get(vars.$colors, 'accent', 'base'), 0.3) 0%,
                        rgba(map-get(vars.$colors, 'accent', 'base'), 0.1) 70%);
                display: flex;
                flex-direction: column;
                align-items: center;
                justify-content: center;
                box-shadow: 0 0 20px rgba(map-get(vars.$colors, 'accent', 'base'), 0.3);
                position: relative;

                .score-value {
                    font-size: 1.8rem;
                    font-weight: 700;
                    color: map-get(vars.$colors, 'text', 'light');
                    text-shadow: 0 0 10px rgba(255, 255, 255, 0.5);
                }

                .score-icon {
                    color: map-get(vars.$colors, 'accent', 'base');
                    font-size: 1rem;
                    margin-top: -5px;
                    filter: drop-shadow(0 0 3px rgba(map-get(vars.$colors, 'accent', 'base'), 0.8));
                }

                &::before,
                &::after {
                    content: '';
                    position: absolute;
                    top: -5px;
                    left: -5px;
                    right: -5px;
                    bottom: -5px;
                    border-radius: 50%;
                    border: 2px solid rgba(map-get(vars.$colors, 'accent', 'base'), 0.2);
                }

                &::after {
                    top: -10px;
                    left: -10px;
                    right: -10px;
                    bottom: -10px;
                    border: 1px solid rgba(map-get(vars.$colors, 'accent', 'base'), 0.1);
                }
            }

            .score-label {
                margin-top: 5px;
                font-size: 0.9rem;
                color: map-get(vars.$colors, 'text', 'muted');
            }
        }
    }
}

.pulse-animation {
    animation: pulse 2s infinite;
}

@keyframes pulse {
    0% {
        transform: scale(1);
    }

    50% {
        transform: scale(1.05);
    }

    100% {
        transform: scale(1);
    }
}

@keyframes shimmer {
    0% {
        transform: translateX(-100%);
    }

    100% {
        transform: translateX(100%);
    }
}