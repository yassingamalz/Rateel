@use "sass:map";
@use 'variables' as vars;
@use 'mixins' as mix;

.units-page {
  position: relative;
  min-height: 100vh;
  padding: map.get(vars.$spacing, 'xxl') 0;
  background: linear-gradient(
    to bottom right,
    map.get(vars.$colors, 'primary', 'base'),
    map.get(vars.$colors, 'primary', 'dark')
  );

  &.ng-enter,
  &.ng-leave {
    position: absolute;
    left: 0;
    right: 0;
    transition: all 500ms ease;
  }
}

.units-header {
  position: relative;
  z-index: 10;
  padding: 0 map.get(vars.$spacing, 'lg');
  margin-bottom: map.get(vars.$spacing, 'xl');

  .header-content {
    max-width: 1200px;
    margin: 0 auto;
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .page-title {
    font-size: 2rem;
    font-weight: 600;
    color: map.get(vars.$colors, 'text', 'light');
  }
}

.change-course-btn {
  @include mix.glass-effect;
  display: flex;
  align-items: center;
  gap: map.get(vars.$spacing, 'sm');
  padding: map.get(vars.$spacing, 'sm') map.get(vars.$spacing, 'lg');
  border-radius: map.get(vars.$border-radius, 'full');
  border: none;
  color: map.get(vars.$colors, 'text', 'light');
  cursor: pointer;
  transition: all 0.3s ease;

  &:hover {
    transform: translateY(-2px);
    background: rgba(map.get(vars.$colors, 'accent', 'base'), 0.2);
  }
}

.units-outer-container {
  position: relative;
  overflow: hidden;
  min-height: calc(100vh - 200px);
  padding-top: map.get(vars.$spacing, 'xl');
}

.units-loading {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 10;
}

.units-container {
  position: relative;
  overflow-x: auto;
  overflow-y: visible;
  padding: 0 map.get(vars.$spacing, 'lg');
  cursor: grab;
  scroll-behavior: smooth;
  -webkit-overflow-scrolling: touch;
  transition: opacity 0.3s ease-in-out;
  scroll-snap-type: x mandatory;

  &::-webkit-scrollbar {
    display: none;
  }

  scrollbar-width: none;

  &.dragging {
    cursor: grabbing;
    scroll-snap-type: none;
    user-select: none;

    * {
      cursor: grabbing;
      pointer-events: none;
    }
  }
}

.units-wrapper {
  display: flex;
  align-items: center;
  padding: map.get(vars.$spacing, 'lg') 0;
  margin: 0 auto;
  width: max-content;
  padding-right: calc(50vw - 200px);
  padding-left: calc(50vw - 200px);
}

.unit-item {
  display: flex;
  align-items: center;
  position: relative;
  scroll-snap-align: center;
  scroll-snap-stop: always;
  transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);

  &--active {
    transform: scale(1.05);
    z-index: 2;

    app-unit-card {
      opacity: 1;
      transform: translateY(-8px);
    }

    .connector-line {
      opacity: 1;
      transform: scaleX(1.05);
    }
  }

  app-unit-card {
    cursor: pointer;
    opacity: 0.8;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);

    &:hover:not(.dragging) {
      opacity: 1;
      transform: translateY(-4px);
    }
  }
}

.connector-line {
  width: 80px;
  height: 4px;
  background: rgba(map.get(vars.$colors, 'accent', 'base'), 0.1);
  margin: 0 map.get(vars.$spacing, 'md');
  position: relative;
  overflow: hidden;
  transition: all 0.3s ease;

  &__progress {
    position: absolute;
    top: 0;
    right: 0;
    height: 100%;
    background: map.get(vars.$colors, 'accent', 'base');
    transition: width 0.5s cubic-bezier(0.4, 0, 0.2, 1);
  }

  &::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      to right,
      transparent,
      rgba(map.get(vars.$colors, 'accent', 'base'), 0.2),
      transparent
    );
    animation: shimmer 2s infinite;
  }

  &--completed {
    background: rgba(map.get(vars.$colors, 'accent', 'base'), 0.2);
    .connector-line__progress {
      background: map.get(vars.$colors, 'accent', 'base');
    }
  }

  &--active {
    transform-origin: left;
    .connector-line__progress {
      background: map.get(vars.$colors, 'accent', 'light');
    }
  }
}

.connector-node {
  position: absolute;
  width: 8px;
  height: 8px;
  background: map.get(vars.$colors, 'accent', 'base');
  border-radius: 50%;
  top: 50%;
  transform: translateY(-50%);

  &--start { left: -4px; }
  &--end { right: -4px; }
}

@keyframes shimmer {
  0% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(100%);
  }
}

// Mobile landscape styles
@media only screen 
    and (orientation: landscape)
    and (max-device-width: 926px)
    and (hover: none) 
    and (pointer: coarse),
  only screen 
    and (orientation: landscape)
    and (max-device-height: 926px)
    and (hover: none) 
    and (pointer: coarse) {
  
  .units-page {
    padding: map.get(vars.$spacing, 'lg') 0;
  }

  .units-header {
    padding: 0 map.get(vars.$spacing, 'md');
    margin-bottom: map.get(vars.$spacing, 'lg');

    .page-title {
      font-size: 1.5rem;
    }
  }

  .units-outer-container {
    min-height: calc(100vh - 120px);
    padding-top: map.get(vars.$spacing, 'lg');
  }

  .units-container {
    padding: 0 map.get(vars.$spacing, 'md');
  }

  .units-wrapper {
    padding: map.get(vars.$spacing, 'md') 0;
    padding-right: calc(50vw - 150px);
    padding-left: calc(50vw - 150px);
  }

  .connector-line {
    width: 60px;
    margin: 0 map.get(vars.$spacing, 'sm');
  }
}

// RTL Support
[dir="rtl"] {
  .units-wrapper {
    direction: rtl;
  }

  .connector-line__progress {
    right: auto;
    left: 0;
  }

  .change-course-btn i {
    transform: scaleX(-1);
  }
}