// sidebar.component.scss
@use "sass:map";
@use 'variables' as vars;
@use 'mixins' as mix;

.sidebar {
  position: fixed;
  top: 0;
  right: 0;
  height: 100vh;
  width: 320px;
  background: linear-gradient(
    to bottom,
    map.get(vars.$colors, 'primary', 'base'),
    map.get(vars.$colors, 'primary', 'dark')
  );
  display: flex;
  flex-direction: column;
  z-index: 1000;
  transition: width 0.3s cubic-bezier(0.4, 0, 0.2, 1);

  // Header Section
  &__header {
    height: 80px;
    display: flex;
    align-items: center;
    padding: 0 map.get(vars.$spacing, 'lg');
    justify-content: flex-end;
    border-bottom: 1px solid rgba(map.get(vars.$colors, 'primary', 'light'), 0.1);
  }

  // Toggle Button
  &__toggle {
    width: 40px;
    height: 40px;
    border-radius: 20px;
    background: rgba(map.get(vars.$colors, 'primary', 'light'), 0.2);
    border: none;
    color: map.get(vars.$colors, 'text', 'light');
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
    
    &:hover {
      background: rgba(map.get(vars.$colors, 'primary', 'light'), 0.3);
    }

    i {
      font-size: 1.25rem;
    }
  }

  // Menu Container
  &__menu {
    display: flex;
    flex-direction: column;
    gap: map.get(vars.$spacing, 'md');
    padding: map.get(vars.$spacing, 'lg');
    margin-top: map.get(vars.$spacing, 'md');
    overflow-y: auto;
    -ms-overflow-style: none;
    scrollbar-width: none;
    
    &::-webkit-scrollbar {
      display: none;
    }
  }

  // Menu Item
  &__menu-item {
    position: relative;
    display: flex;
    align-items: center;
    height: 72px;
    padding: map.get(vars.$spacing, 'md') map.get(vars.$spacing, 'lg');
    color: map.get(vars.$colors, 'text', 'light');
    text-decoration: none;
    border-radius: 36px;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    gap: map.get(vars.$spacing, 'md');

    &:hover, &--active {
      background: rgba(map.get(vars.$colors, 'accent', 'base'), 0.15);
      border: 1px solid rgba(map.get(vars.$colors, 'accent', 'base'), 0.3);
      
      .sidebar__menu-item-icon {
        background: map.get(vars.$colors, 'accent', 'base');
        color: map.get(vars.$colors, 'text', 'dark');
        box-shadow: 0 0 20px rgba(map.get(vars.$colors, 'accent', 'base'), 0.4);
      }
    }

    // Icon Container
    &-icon {
      position: relative;
      width: 48px;
      height: 48px;
      border-radius: 24px;
      display: flex;
      align-items: center;
      justify-content: center;
      flex-shrink: 0;

      i {
        font-size: 1.25rem;
        color: map.get(vars.$colors, 'text', 'ligh');
      }
    }

    // Label
    &-label {
      font-family: 'Cairo', sans-serif;
      font-size: 1.125rem;
      font-weight: 500;
      color: map.get(vars.$colors, 'text', 'light');
    }

    // Badge
    &-badge {
      display: flex;
      align-items: center;
      justify-content: center;
      position: absolute;
      top: 50%;
      right:350%;
      transform: translateY(-50%);
      min-width: 28px;
      height: 28px;
      background: map.get(vars.$colors, 'accent', 'base');
      color: map.get(vars.$colors, 'text', 'dark');
      border-radius: 50px;
      font-size: 0.875rem;
      font-weight: 600;
      padding: map.get(vars.$spacing, 'xs') map.get(vars.$spacing, 'sm');
    }
  }

  // Collapsed State
  &--collapsed {
    width: 80px;

    .sidebar__menu {
      padding: map.get(vars.$spacing, 'sm');
    }

    .sidebar__menu-item {
      height: 64px;
      padding: map.get(vars.$spacing, 'sm');
      border-radius: 32px;
      justify-content: center;
      margin: map.get(vars.$spacing, 'sm') auto;

      &-label {
        display: none;
      }

      &-badge {
        left: auto;
        right: 20px;
        top: -6px;
        transform: none;
        min-width: 20px;
        height: 20px;
        font-size: 0.75rem;
      }

      &-icon {
        margin: 0;
      }
    }
  }
}